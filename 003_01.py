def _03_01():
    '''0.3 Списки
1. Початок і кінець співпадають
Дано список стрічок. Необхідно повернути кількість стрічок, довжина яких складає 2 сим-
воли і більше, а перший і останній символи цих стрічок співпадають. Зауваження: в python
немає оператора ++. Але += працює.'''
    s = 'a sf dfg fghf'
    s = s.split(' ')
    q = 0
    for i in range(len(s)):
        if len(s[i]) > 1:
            if (s[i][0]) == s[i][-1]:
                q += 1
    print('Кількість стрічок становить', q)

def _03_02():
    '''
2. Ті, що починаються з X на початку
Дано список стрічок. Необхідно повернути відсортований список стрічок, в якому: спочатку
йде група стрічок, які починаються на ’x’, потім всі інші. Нариклад: із [’mix’, ’xyz’, ’apple’,
’xanadu’, ’aardvark’] отримають [’xanadu’, ’xyz’, ’aardvark’, ’apple’, ’mix’]. Підказка: це мо-
жна зробити за допомогою склеювання двох наперед відсортованих списків.
    '''
    lst_x = []
    lst_nx = []
    lst = ['mix', 'xy', 'xz', 'xyz', 'apple', 'xanadu', 'aardvark']
    lst.sort()
    for i in range(len(lst)):
        if (lst[i][0]) == 'x':
            lst_x.append(lst[i])
        else:
            lst_nx.append(lst[i])
            #print(del)#lst[i])
    print('З вхідного списку', lst,'отримано такий вихідний:\n', lst_x + lst_nx)
_03_02()

'''

3. Сортування за останнім числом
Дано спискок непустих списків. Потрібно повернути список, який відсортований за зроста-
нням останнього елемента кожного підсписку. Наприклад: із [[1, 7], [1, 3], [3, 4, 5], [2, 2]]
отримається [[2, 2], [1, 3], [3, 4, 5], [1, 7]]. Підказка: використовуйте параметр key= функції
сортування, щоб отримати останній елемент підсписку.
4. Видалення сусідів
Дано список чисел. Потрібно повернути список, де всі сусідні елементи були б зведені до
одного елемента. Таким чином, із [1, 2, 2, 3, 4, 4] отримується [1, 2, 3, 4].'''
