# Зрізи

# Заповнити код приведених нижче функцій. Функція main() вже
# налаштована для виклику функцій з декількома різними
# параметрами, і виводить 'OK' у випадку, якщо виклик функції
# коректний.
# Початковий код кожної функції містить 'return'
# і є просто заготовкою для вашого коду.


# Довідка
# Оператор отримання зрізу має три форми запису:
# seq[start]
# seq[start:end]
# seq[start:end:step]
# Крок може бути від’ємним, у цьому випадку елементи послідовності
# повернтаються у зворотньому порядку.


# A. Парні
# Дано стрічка, що складається з символів і/або послідовностей символів,
# які розділені прогалинами.
# Потрібно повернути стрічку, що містить тільки парні елементи
# з вихідної стрічки.
# Наприклад, із 'a b c d e f' отримається 'b d f'
# Вирішіть задачу в одну стрічку використовуючи зрізи.
def even(s):
    # +++ ваш код +++
    return


# B. Навпаки
# Дано стрічка, що складається з символів і/або послідовностей символів,
# які розділені прогалинами.
# Потрібно повернути стрічку, що містить елементи вихідної стрічки
# у зворотньому порядку.
# Наприклад, із 'a b c d e' получиться 'e d c b a'
# Вирішіть задачу в одну стрічку використовуючи зрізи.
def reverse(s):
    # +++ ваш код +++
    return


# C. Зсув
# Дано стрічка, що складається з символів і/або послідовностей символів,
# які розділені прогалинами.
# Потрібно повернути стрічку, в якій останній елемент знаходиться
# на першому місці.
# Наприклад, із 'a b c d e f' получиться 'f a b c d e'
# Вирішіть задачу в одну стрічку використовуючи зрізи.
def shift(s):
    # +++ ваш код +++
    return


# D. Паліндром
# Дано число.
# Потрібно визначити чи є воно паліндромом.
# Число є паліндромом якщо воно однаково читається в обидвох напрямках.
# Вирішіть задачу в одну стрічку використовуючи зрізи.
def palindrome(d):
    # +++ ваш код +++
    return


# E. В середині
# Дано стрічка, що складається з парної кількості символів і/або
# послідовностей символів, які розділені прогалинами.
# Поверніть стрічку, в якій перший і останній елементи поставлені в середину
# вихідної стрічки. Наприклад, із 'a b c d e f' получиться 'b c a f d e'.
# Вирішіть задачу в одну стрічку використовуючи зрізи.
def inside(s):
    # +++ ваш код +++
    return



# Проста функція test() використовується в main() для виведення
# порівняння того, що повертається з функції з тим, що вона повинна повертати.
def test(got, expected):
    if got == expected:
        prefix = ' OK '
    else:
        prefix = '  X '
    print('%s Отримано: %s | Очікувалося: %s' % (prefix, repr(got), repr(expected)))


# Викликає фунції вище з тестовими параметрами.
def main():
    print('Парні')
    test(even('a b c d e f'), 'b d f')
    test(even('w ee rt fff xyz'), 'ee fff')

    print()
    print('Навпаки')
    test(reverse('a b c d e f'), 'f e d c b a')
    test(reverse('w ee rt fff xyz'), 'xyz fff rt ee w')

    print()
    print('Зсув')
    test(shift('a b c d e f'), 'f a b c d e')
    test(shift('w ee rt fff xyz'), 'xyz w ee rt fff')

    print()
    print('Паліндром')
    test(palindrome(12321), True)
    test(palindrome(12345), False)

    print()
    print('В середині')
    test(inside('a b c d e f'), 'b c a f d e')
    test(inside('w ee rt fff'), 'ee w fff rt')


if __name__ == '__main__':
    main()
